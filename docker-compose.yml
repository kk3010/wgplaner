version: '3.8'

services:
  frontend:
    image: wgplaner-frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - 4000:5000
    networks:
      - frontend
    depends_on:
      - backend

  backend:
    image: wgplaner-backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    env_file: ./backend/.env.sample
    depends_on:
      - postgres
    networks:
      - frontend
      - backend

  postgres:
    image: postgres:11
    volumes:
      - postgres:/var/lib/postgres/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wgplaner
    networks:
      - backend

  adminer:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: galkaev
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    networks:
      - backend

volumes:
  postgres:

    null
networks:
  frontend: null
  backend: null
